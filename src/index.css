@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Gen Z Modern Color Palette */
    --background: 235 20% 98%;
    --foreground: 240 15% 15%;

    --card: 0 0% 100%;
    --card-foreground: 240 15% 15%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 15% 15%;

    /* Vibrant green primary for Gen Z appeal */
    --primary: 140 85% 55%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 140 75% 65%;
    --primary-dark: 140 90% 35%;

    /* Neon accent colors */
    --secondary: 120 85% 65%;
    --secondary-foreground: 0 0% 100%;

    --muted: 235 15% 95%;
    --muted-foreground: 240 10% 55%;

    /* Electric emerald accent */
    --accent: 160 100% 55%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 85% 65%;
    --destructive-foreground: 0 0% 100%;

    --border: 235 20% 88%;
    --input: 235 20% 88%;
    --ring: 140 85% 55%;

    /* Modern gradient system */
    --gradient-primary: linear-gradient(135deg, hsl(140 85% 55%), hsl(120 85% 65%));
    --gradient-secondary: linear-gradient(135deg, hsl(160 100% 55%), hsl(140 85% 55%));
    --gradient-hero: linear-gradient(135deg, hsl(140 90% 25%), hsl(140 85% 55%), hsl(120 85% 65%));
    --gradient-glass: linear-gradient(135deg, hsl(0 0% 100% / 0.15), hsl(0 0% 100% / 0.05));
    --gradient-glass-dark: linear-gradient(135deg, hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 0.05));
    --gradient-shimmer: linear-gradient(110deg, transparent 40%, hsl(0 0% 100% / 0.7) 50%, transparent 60%);
    --gradient-neural: radial-gradient(circle at 20% 50%, hsl(140 85% 55% / 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 50%, hsl(160 100% 55% / 0.3) 0%, transparent 50%);
    --gradient-card: linear-gradient(145deg, hsl(0 0% 100% / 0.9), hsl(0 0% 100% / 0.7));
    --gradient-neon: linear-gradient(45deg, hsl(140 85% 55%), hsl(120 85% 65%), hsl(160 100% 55%));
    --gradient-sunset: linear-gradient(135deg, hsl(120 85% 65%), hsl(80 100% 60%), hsl(160 100% 55%));
    
    --shadow-soft: 0 4px 20px hsl(240 15% 15% / 0.08);
    --shadow-card: 0 4px 16px hsl(240 15% 15% / 0.12);
    --shadow-hover: 0 12px 40px hsl(140 85% 55% / 0.25);
    --shadow-glass: 0 8px 32px 0 hsl(0 0% 0% / 0.1);
    --shadow-glow: 0 0 50px hsl(140 85% 55% / 0.5);
    --shadow-neural: 0 25px 70px hsl(140 85% 55% / 0.15);
    --shadow-neon: 0 0 30px hsl(140 85% 55% / 0.8), 0 0 60px hsl(120 85% 65% / 0.6);
    
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    --transition-elastic: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    --transition-spring: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
    
    /* Enhanced glass effect variables */
    --glass-border: hsl(140 85% 55% / 0.3);
    --glass-bg: hsl(0 0% 100% / 0.2);
    --glass-backdrop: blur(16px)

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 240 15% 8%;
    --foreground: 240 5% 95%;

    --card: 240 15% 10%;
    --card-foreground: 240 5% 95%;

    --popover: 240 15% 10%;
    --popover-foreground: 240 5% 95%;

    --primary: 140 85% 65%;
    --primary-foreground: 240 15% 8%;
    --primary-glow: 140 75% 75%;

    --secondary: 120 85% 75%;
    --secondary-foreground: 240 15% 8%;

    --muted: 240 15% 15%;
    --muted-foreground: 240 10% 65%;

    --accent: 160 100% 65%;
    --accent-foreground: 240 15% 8%;

    --destructive: 0 85% 75%;
    --destructive-foreground: 240 15% 8%;

    --border: 240 15% 20%;
    --input: 240 15% 20%;
    --ring: 140 85% 65%;
    
    /* Dark mode enhanced glass effects */
    --glass-border: hsl(140 85% 55% / 0.2);
    --glass-bg: hsl(240 15% 10% / 0.8);
    --glass-backdrop: blur(16px)
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  /* Enhanced glass effect utility classes */
  .glass-card {
    @apply bg-background/95 border border-border/50 rounded-xl shadow-card backdrop-blur-sm;
    background: var(--gradient-card);
  }
  
  .glass-effect {
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    border-radius: 1rem;
    backdrop-filter: var(--glass-backdrop);
    -webkit-backdrop-filter: var(--glass-backdrop);
  }

  .glass-morphism {
    @apply relative overflow-hidden rounded-2xl border;
    background: linear-gradient(135deg, hsl(0 0% 100% / 0.1), hsl(0 0% 100% / 0.05));
    border: 1px solid hsl(0 0% 100% / 0.2);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
  }

  .neon-glow {
    @apply relative;
    box-shadow: var(--shadow-neon);
  }

  .neon-glow::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: var(--gradient-neon);
    border-radius: inherit;
    z-index: -1;
    opacity: 0.7;
    filter: blur(8px);
  }
  
  /* Masonry grid styles */
  .masonry-grid {
    columns: 1;
    column-gap: 1.5rem;
    break-inside: avoid;
  }
  
  @media (min-width: 640px) {
    .masonry-grid {
      columns: 2;
    }
  }
  
  @media (min-width: 1024px) {
    .masonry-grid {
      columns: 3;
    }
  }
  
  @media (min-width: 1280px) {
    .masonry-grid {
      columns: 4;
    }
  }
  
  .masonry-item {
    @apply break-inside-avoid mb-6;
  }
  
  /* Enhanced hover effects */
  .hover-lift {
    @apply transition-all duration-300 hover:scale-105 hover:shadow-hover hover:-translate-y-1;
  }
  
  .hover-glow {
    @apply transition-all duration-300 hover:shadow-glow;
  }
  
  .hover-neural {
    @apply transition-all duration-500 hover:shadow-neural hover:scale-[1.02];
  }

  .hover-neon {
    @apply transition-all duration-300 hover:shadow-neon hover:scale-105;
  }

  .hover-float {
    @apply transition-all duration-500 hover:-translate-y-2 hover:scale-[1.02] hover:shadow-neural;
  }

  .hover-tilt {
    @apply transition-all duration-300 hover:scale-105;
  }

  .hover-tilt:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg) scale(1.05);
  }
  
  /* Shimmer effect for loading states */
  .shimmer {
    @apply relative overflow-hidden;
  }
  
  .shimmer::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: var(--gradient-shimmer);
    animation: shimmer 2s infinite;
  }
  
  /* Neural network background effect */
  .neural-bg {
    background: var(--gradient-neural);
  }
  
  /* Backdrop effects without blur */
  .blur-backdrop {
    background: hsl(var(--background) / 0.9);
  }
  
  /* Interactive elements */
  .interactive {
    @apply transition-all duration-300 cursor-pointer hover:scale-[1.02] active:scale-[0.98];
  }
  
  .pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .gradient-text {
    @apply bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent;
  }

  .gradient-border {
    @apply relative;
  }

  .gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: var(--gradient-neon);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    -webkit-mask-composite: xor;
  }

  .floating-card {
    @apply relative;
    animation: float 6s ease-in-out infinite;
  }

  .floating-card:nth-child(even) {
    animation-delay: -3s;
  }

  .gen-z-card {
    @apply glass-morphism hover-float p-6 relative overflow-hidden;
  }

  .gen-z-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsl(0 0% 100% / 0.1), transparent);
    transition: left 0.5s;
  }

  .gen-z-card:hover::before {
    left: 100%;
  }

  /* Card Grid Layout - Exactly 3 cards per row */
  .card-grid {
    @apply grid gap-8 w-full;
    grid-template-columns: repeat(3, 1fr);
    align-items: stretch;
  }

  @media (max-width: 640px) {
    .card-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }

  @media (min-width: 641px) and (max-width: 1023px) {
    .card-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }
  }

  @media (min-width: 1024px) {
    .card-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }
  }

  /* Card Layout */
  .card {
    @apply flex flex-col justify-between h-full;
  }

  .card-content {
    @apply flex-1;
  }

  .card-actions {
    @apply mt-auto;
  }
}